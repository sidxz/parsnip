"use client";
import { create } from "zustand";

export const useVulnerabilityStore = create((set, get) => ({
  byAccession: {},
  vulnerabilityLoading: false,
  error: null,

  loadVulnerabilities: async () => {
    set({ vulnerabilityLoading: true, error: null });
    try {
      console.log("Fetching vulnerabilities...");
      const res = await fetch("https://raw.githubusercontent.com/sidxz/parsnip-data/refs/heads/main/data/vulnerability_data_with_accession.json", {
        cache: "no-store",
      });
      if (!res.ok) throw new Error(`HTTP ${res.status}`);
      const data = await res.json();
      set({ byAccession: data || {}, vulnerabilityLoading: false });
    } catch (e) {
      set({
        error: e?.message || "Failed to load vulnerabilities",
        vulnerabilityLoading: false,
      });
    }
  },

  getByAccession: (accessionNumber) => {
    if (!accessionNumber) return [];
    return get().byAccession?.[accessionNumber] ?? [];
  },

  reset: () => set({ byAccession: {}, error: null, vulnerabilityLoading: false }),
}));
